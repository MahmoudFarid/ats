version: '3.7'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: 513497754570.dkr.ecr.eu-central-1.amazonaws.com/web/django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    deploy:
      replicas: 3
      # placement:
      #   constraints:
      #     - node.role == worker
          # - node.labels.postgres == True

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: 513497754570.dkr.ecr.eu-central-1.amazonaws.com/web/postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  nginx:
    build: ./compose/production/nginx
    image: 513497754570.dkr.ecr.eu-central-1.amazonaws.com/web/nginx
    depends_on:
      - django
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    command: /start-celeryworker

  celerybeat:
    <<: *django
    command: /start-celerybeat

  flower:
    <<: *django
    command: /start-flower
